

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (23 September 2021 16:26:24) as D:\documentos\inge1\1erParcial\windows64\windows64\CuisUniversity-4532.image!


----SNAPSHOT----(23 September 2021 16:26:38) CuisUniversity-4532.image priorSource: 16885703!

----SNAPSHOT----(23 September 2021 16:26:44) CuisUniversity-4532.image priorSource: 16885917!

----SNAPSHOT----(23 September 2021 16:27:34) CuisUniversity-4532.image priorSource: 16886012!

----STARTUP---- (23 September 2021 17:27:07) as D:\documentos\inge1\1erParcial\windows64\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\sebaa\Desktop\parcial\ISW1-2021-2C-1erParcial.st----!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 17:28:47'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 17:28:47'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 17:28:48'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 17:28:49'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 17:28:49'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 17:28:49'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 17:28:49'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 17:28:49'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 17:28:49'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 17:28:49'!
PASSED!

----SNAPSHOT----(23 September 2021 17:30:09) CuisUniversity-4532.image priorSource: 16886107!

----SNAPSHOT----(23 September 2021 17:30:29) CuisUniversity-4532.image priorSource: 16908022!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:41:41'!
checkIfZonesIsNilToInitialiseIt

	zones ifNil: [ zones _ OrderedCollection new].


! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:42:12' prior: 50859747!
energyConsumption
	
	| index total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		zone type = #Residential ifTrue: [ total _ total + ((5 * ep) * zone getNumberOfCells) ].	
		zone type = #Commertial ifTrue: [ total _ total +((8 * ep) * zone getNumberOfCells) ].	
		zone type = #Industrial ifTrue: [ total _ total + ((10 * ep) * zone getNumberOfCells) ].	
		index := index + 1.
	].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:42:30'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 17:42:31'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 17:42:31'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:42:58' prior: 50859797!
waterConsumption
	
	| index total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		zone type = #Residential ifTrue: [ total _ total + ((9 * wp) * zone getNumberOfCells) ].	
		zone type = #Commertial ifTrue: [ total _ total + ((2 * wp) * zone getNumberOfCells) ].	
		zone type = #Industrial ifTrue: [ total _ total + ((10 * wp) * zone getNumberOfCells) ].	
		index := index + 1.
	].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 17:43:05'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 17:43:05'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 17:43:05'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 17:43:05'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 17:43:05'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 17:43:05'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 17:43:05'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 17:43:05'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 17:43:06'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:43:24' prior: 50859827!
zones

	self checkIfZonesIsNilToInitialiseIt.

	^ zones.
! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:43:46' prior: 50859712!
addZone: aZone

	self checkIfZonesIsNilToInitialiseIt.

	aZone type = #Residential ifTrue: [
		self energyAvailable < (5 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (9 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	].

	aZone type = #Commertial ifTrue: [
		self energyAvailable < (2 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (8 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		
		self hasResidentialZones ifFalse: [ self error: City cannotAddCommertialZoneErrorDescription ].
	].

	aZone type = #Industrial ifTrue: [
		self energyAvailable < (10 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (10 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	].

	zones add: aZone.
! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:44:58'!
checkIfServicesIsNilToInitialiseIt

	services ifNil: [ services _ OrderedCollection new].


! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:45:22' prior: 50859706!
addService: aService 

	self checkIfServicesIsNilToInitialiseIt.
	services add: aService.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 17:45:27'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 17:45:28'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:46:05' prior: 50859765!
energyProduced
	
	| index total |
	
	self checkIfServicesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0 * ep.
	
	[index <= services size] whileTrue: [ | service |
		service _ services at: index.
		service type = #SolarPlant ifTrue: [ total _ total + (500 * ep)].	
		index := index + 1.
	].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 17:46:08'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 17:46:09'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:46:35' prior: 50859815!
waterProduced
	| index total |
	
	self checkIfServicesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	
	[index <= services size] whileTrue: [ | service |
		service _ services at: index.
		service type = #WaterTower ifTrue: [ total _ total + (200 * wp)].	
		index := index + 1.
	].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 17:47:04'!
PASSED!

Zone subclass: #Residential
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!

!classDefinition: #Residential category: 'ISW1-2021-2C-1erParcial' stamp: 'sm 9/23/2021 17:52:44'!
Zone subclass: #Residential
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!

Zone subclass: #Commertial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!

!classDefinition: #Commertial category: 'ISW1-2021-2C-1erParcial' stamp: 'sm 9/23/2021 17:52:57'!
Zone subclass: #Commertial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!

Zone subclass: #Industrial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!

!classDefinition: #Industrial category: 'ISW1-2021-2C-1erParcial' stamp: 'sm 9/23/2021 17:53:15'!
Zone subclass: #Industrial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:54:37' prior: 50859361!
commertialZone

	^ Commertial new withType: #Commertial! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:55:47' prior: 50860679!
commertialZone

	^ Commertial new initializeWithType: #Commertial! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 17:56:03'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:57:36' prior: 50859365!
industrialZone
	^ Industrial new initializeWithType: #Industrial.
	! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:57:43' prior: 50860789!
industrialZone

	^ Industrial new initializeWithType: #Industrial.
	! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:57:50' prior: 50860795!
industrialZone

	^ Industrial new initializeWithType: #Industrial
	! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 17:58:41' prior: 50859369!
residentialZone

	^ Residential new initializeWithType: #Residential
! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 17:58:48'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 17:58:49'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:01:18' prior: 50860279!
addZone: aZone

	self checkIfZonesIsNilToInitialiseIt.
	aZone checkIfThisZoneIsAviableToAddOnTheCity: self.
	aZone type = #Residential ifTrue: [
		self energyAvailable < (5 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (9 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	].

	aZone type = #Commertial ifTrue: [
		self energyAvailable < (2 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (8 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		
		self hasResidentialZones ifFalse: [ self error: City cannotAddCommertialZoneErrorDescription ].
	].

	aZone type = #Industrial ifTrue: [
		self energyAvailable < (10 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (10 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	].

	zones add: aZone.
! !
!Commertial methodsFor: 'no messages' stamp: 'sm 9/23/2021 18:01:50'!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
! !
!Industrial methodsFor: 'no messages' stamp: 'sm 9/23/2021 18:02:02'!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
! !
!Residential methodsFor: 'no messages' stamp: 'sm 9/23/2021 18:02:16'!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
! !
!Residential methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:03:25' prior: 50860951!
checkIfThisZoneIsAviableToAddOnTheCity: aCity

	aCity energyAvailable < (5 * ep) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
	aCity waterAvailable < (9 * wp) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
! !
!Commertial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:04:37' prior: 50860943!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
		
		aCity energyAvailable < (2 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		aCity waterAvailable < (8 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		aCity hasResidentialZones ifFalse: [ self error: City cannotAddCommertialZoneErrorDescription ].! !
!Residential methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:04:53' prior: 50860956!
checkIfThisZoneIsAviableToAddOnTheCity: aCity

	aCity energyAvailable < (5 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	aCity waterAvailable < (9 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
! !
!Industrial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:05:39' prior: 50860947!
checkIfThisZoneIsAviableToAddOnTheCity: aCity

		aCity energyAvailable < (10 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		aCity waterAvailable < (10 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:05:57' prior: 50860912!
addZone: aZone

	self checkIfZonesIsNilToInitialiseIt.
	"aZone checkIfThisZoneIsAviableToAddOnTheCity: self.
	aZone type = #Residential ifTrue: [
		self energyAvailable < (5 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (9 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	].

	aZone type = #Commertial ifTrue: [
		self energyAvailable < (2 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (8 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		
		self hasResidentialZones ifFalse: [ self error: City cannotAddCommertialZoneErrorDescription ].
	].

	aZone type = #Industrial ifTrue: [
		self energyAvailable < (10 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (10 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	].
"
	zones add: aZone.
! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
FAILURE!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
FAILURE!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:06:05'!
FAILURE!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:06:05'!
FAILURE!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:06:05'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:06:06'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:06:06'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:06:06'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:06:06'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:06:14'!
FAILURE!

----SNAPSHOT----(23 September 2021 18:07:12) CuisUniversity-4532.image priorSource: 16908117!
!Commertial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:07:39' prior: 50860967!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
		
		aCity energyAvailable < (2 * ep) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
		aCity waterAvailable < (8 * wp) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
		aCity hasResidentialZones ifFalse: [ aCity error: City cannotAddCommertialZoneErrorDescription ].! !
!Industrial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:07:49' prior: 50860992!
checkIfThisZoneIsAviableToAddOnTheCity: aCity

		aCity energyAvailable < (10 * ep) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
		aCity waterAvailable < (10 * wp) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].! !
!Residential methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:08:00' prior: 50860981!
checkIfThisZoneIsAviableToAddOnTheCity: aCity

	aCity energyAvailable < (5 * ep) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
	aCity waterAvailable < (9 * wp) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:08:09'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:08:10'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:08:10'!
FAILURE!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:08:10'!
FAILURE!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:08:10'!
FAILURE!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:08:10'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:08:10'!
FAILURE!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:08:10'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:08:10'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:08:10'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:08:10'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:08:10'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:08:10'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:08:17'!
FAILURE!
!Commertial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:10:52' prior: 50861142!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
		
		aCity energyAvailable < (2 * ep) ifTrue: [ aCity doAddZoneErrorDescription error: City cannotAddZoneErrorDescription ].
		aCity waterAvailable < (8 * wp) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
		aCity hasResidentialZones ifFalse: [ aCity error: City cannotAddCommertialZoneErrorDescription ].! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:11:58'!
doAddZoneErrorDescription

	self ! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:12:32' prior: 50861295!
doAddZoneErrorDescription

	self error: City cannotAddZoneErrorDescription. ! !
!Commertial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:12:50' prior: 50861281!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
		
		aCity energyAvailable < (2 * ep) ifTrue: [ aCity doAddZoneErrorDescription].
		aCity waterAvailable < (8 * wp) ifTrue: [ aCity error: City cannotAddZoneErrorDescription ].
		aCity hasResidentialZones ifFalse: [ aCity error: City cannotAddCommertialZoneErrorDescription ].! !
!Commertial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:13:36' prior: 50861305!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
		
		aCity energyAvailable < (2 * ep) ifTrue: [ aCity doAddZoneErrorDescription].
		aCity waterAvailable < (8 * wp) ifTrue: [ aCity doAddZoneErrorDescription].
		aCity hasResidentialZones ifFalse: [ aCity error: City cannotAddCommertialZoneErrorDescription ].! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:14:21'!
doAddCommertialZoneErrorDescription
	self error: City cannotAddCommertialZoneErrorDescription. 
	! !
!Commertial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:14:39' prior: 50861319!
checkIfThisZoneIsAviableToAddOnTheCity: aCity
		
		aCity energyAvailable < (2 * ep) ifTrue: [ aCity doAddZoneErrorDescription].
		aCity waterAvailable < (8 * wp) ifTrue: [ aCity doAddZoneErrorDescription].
		aCity hasResidentialZones ifFalse: [ aCity doAddCommertialZoneErrorDescription].! !
!Industrial methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:15:11' prior: 50861156!
checkIfThisZoneIsAviableToAddOnTheCity: aCity

		aCity energyAvailable < (10 * ep) ifTrue: [ aCity doAddZoneErrorDescription ].
		aCity waterAvailable < (10 * wp) ifTrue: [ aCity doAddZoneErrorDescription ].! !
!Residential methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:15:33' prior: 50861167!
checkIfThisZoneIsAviableToAddOnTheCity: aCity

	aCity energyAvailable < (5 * ep) ifTrue: [ aCity doAddZoneErrorDescription ].
	aCity waterAvailable < (9 * wp) ifTrue: [ aCity doAddZoneErrorDescription ].
! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:15:37'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:15:37'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:15:37'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
FAILURE!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
FAILURE!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
FAILURE!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:15:38'!
FAILURE!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:15:38'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:15:47'!
FAILURE!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:16:55'!
FAILURE!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:19:45'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:19:45'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
FAILURE!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
FAILURE!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
FAILURE!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:19:46'!
FAILURE!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:19:46'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:20:38'!
FAILURE!

passed!

aBlock value!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:24:31'!
FAILURE!

City cannotAddZoneErrorDescription!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
FAILURE!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
FAILURE!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:26:48'!
FAILURE!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:26:48'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:26:49'!
FAILURE!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:26:49'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:26:49'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:26:49'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:26:49'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:26:49'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:26:49'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:27:17'!
FAILURE!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:29:49' prior: 50861003!
addZone: aZone

	self checkIfZonesIsNilToInitialiseIt.
	aZone checkIfThisZoneIsAviableToAddOnTheCity: self.
	"aZone type = #Residential ifTrue: [
		self energyAvailable < (5 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (9 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	].

	aZone type = #Commertial ifTrue: [
		self energyAvailable < (2 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (8 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		
		self hasResidentialZones ifFalse: [ self error: City cannotAddCommertialZoneErrorDescription ].
	].

	aZone type = #Industrial ifTrue: [
		self energyAvailable < (10 * ep) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
		self waterAvailable < (10 * wp) ifTrue: [ self error: City cannotAddZoneErrorDescription ].
	].
"
	zones add: aZone.
! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:29:57'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:29:58'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:30:55' prior: 50861691!
addZone: aZone

	self checkIfZonesIsNilToInitialiseIt.
	aZone checkIfThisZoneIsAviableToAddOnTheCity: self.
	
	zones add: aZone.
! !
!Residential methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:39:49' overrides: 50859898!
getNumberOfCells

	numberOfCells ifNil: [ ^ 1].	
	
	^ numberOfCells! !
!Commertial methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:39:49' overrides: 50859898!
getNumberOfCells

	numberOfCells ifNil: [ ^ 1].	
	
	^ numberOfCells! !
!Industrial methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:39:49' overrides: 50859898!
getNumberOfCells

	numberOfCells ifNil: [ ^ 1].	
	
	^ numberOfCells! !

!methodRemoval: Zone #getNumberOfCells stamp: 'sm 9/23/2021 18:39:49'!
getNumberOfCells

	numberOfCells ifNil: [ ^ 1].	
	
	^ numberOfCells!
!Commertial methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:42:05'!
getEnergyConsum

	numberOfCells ifNil: [ ^ 1].	
	
	^ numberOfCells * 5! !
!Commertial methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:43:15' prior: 50861848!
getEnergyConsum
	
	
	^ ((8 * ep) * self getNumberOfCells).! !
!Industrial methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:43:54'!
getEnergyConsum
	
	
	^ ((8 * ep) * self getNumberOfCells).! !
!Residential methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:44:02'!
getEnergyConsum
	
	
	^ ((8 * ep) * self getNumberOfCells).! !
!Residential methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:44:19' prior: 50861863!
getEnergyConsum
	
	
	^ ((5 * ep) * self getNumberOfCells).! !
!Industrial methodsFor: 'accessing' stamp: 'sm 9/23/2021 18:44:43' prior: 50861858!
getEnergyConsum
	
	
	^ ((10 * ep) * self getNumberOfCells).! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:46:07' prior: 50860038!
energyConsumption
	
	| index total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		total _ total + (zone getEnergyConsum ).	
		index := index + 1.
	].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:46:13'!
PASSED!

----End fileIn of D:\documentos\inge1\1erParcial\windows64\windows64\Packages\TerseGuide.pck.st----!

----SNAPSHOT----(23 September 2021 18:46:54) CuisUniversity-4532.image priorSource: 16943591!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:49:32' prior: 50861878!
energyConsumption
	
	| index total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	total _ 0.
	zones do: [:zone | total _ total + (zone getEnergyConsum )].

	"
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		total _ total + (zone getEnergyConsum ).	
		index := index + 1.
	].
"
	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:49:53' prior: 50864918!
energyConsumption
	
	|  total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	total _ 0.
	zones do: [:zone | total _ total + (zone getEnergyConsum )].

	"
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		total _ total + (zone getEnergyConsum ).	
		index := index + 1.
	].
"
	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:49:57'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:49:58'!
PASSED!

----SNAPSHOT----(23 September 2021 18:50:12) CuisUniversity-4532.image priorSource: 17064425!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:50:29' prior: 50864932!
energyConsumption
	
	|  total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	total _ 0.
	zones do: [:zone | total _ total + (zone getEnergyConsum )].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:50:33'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:50:34'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:50:34'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:50:34'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:50:34'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:50:34'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:50:34'!
PASSED!

Service subclass: #SolarPlant
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!

!classDefinition: #SolarPlant category: 'ISW1-2021-2C-1erParcial' stamp: 'sm 9/23/2021 18:51:53'!
Service subclass: #SolarPlant
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!

Service subclass: #WaterTower
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!

!classDefinition: #WaterTower category: 'ISW1-2021-2C-1erParcial' stamp: 'sm 9/23/2021 18:52:12'!
Service subclass: #WaterTower
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-2C-1erParcial'!
!SolarPlant methodsFor: 'initialization' stamp: 'sm 9/23/2021 18:52:47' overrides: 50859862!
initializeWithType: aServiceType 

	type _ aServiceType.! !
!WaterTower methodsFor: 'initialization' stamp: 'sm 9/23/2021 18:52:47' overrides: 50859862!
initializeWithType: aServiceType 

	type _ aServiceType.! !

!methodRemoval: Service #initializeWithType: stamp: 'sm 9/23/2021 18:52:47'!
initializeWithType: aServiceType 

	type _ aServiceType.!
!SolarPlant class methodsFor: 'instance creation' stamp: 'sm 9/23/2021 18:53:52' overrides: 50859877!
withType: aServiceType

	^self new initializeWithType: aServiceType ! !
!WaterTower class methodsFor: 'instance creation' stamp: 'sm 9/23/2021 18:53:52' overrides: 50859877!
withType: aServiceType

	^self new initializeWithType: aServiceType ! !

!methodRemoval: Service class #withType: stamp: 'sm 9/23/2021 18:53:52'!
withType: aServiceType

	^self new initializeWithType: aServiceType !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:54:31' prior: 50859373!
solarPlant

	^ SolarPlant withType: #SolarPlant! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 18:54:41' prior: 50859669!
waterTower

	^ WaterTower withType: #WaterTower! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 18:54:46'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:03:09' prior: 50859778!
hasResidentialZones

"	| index |"
	zones ifNil: [ ^ false ].

"	index _ 1."
	zones detect: [:zone | zone type = #Residential] ifNone: [^ false].
"	
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		zone type = #Residential ifTrue: [ ^ true].	
		index := index + 1.
	].
"
	^ true.
! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:03:13'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:03:14'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:03:39' prior: 50865319!
hasResidentialZones


	zones ifNil: [ ^ false ].


	zones detect: [:zone | zone type = #Residential] ifNone: [^ false].
	^ true.
! !

----SNAPSHOT----(23 September 2021 19:03:43) CuisUniversity-4532.image priorSource: 17068574!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:03:58'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:03:59'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:03:59'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:03:59'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:03:59'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:03:59'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:03:59'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:03:59'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:03:59'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:03:59'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:04:19' prior: 50865431!
hasResidentialZones


	zones ifNil: [ ^ false ].
	zones detect: [:zone | zone type = #Residential] ifNone: [^ false].
	^ true.
! !
!Industrial methodsFor: 'accessing' stamp: 'sm 9/23/2021 19:05:16'!
getWaterConsumption
	
	
	^ ((10 * ep) * self getNumberOfCells).! !
!Residential methodsFor: 'accessing' stamp: 'sm 9/23/2021 19:06:03'!
getWaterConsumption
	
	
	^ ((10 * ep) * self getNumberOfCells).! !
!Commertial methodsFor: 'accessing' stamp: 'sm 9/23/2021 19:06:10'!
getWaterConsumption
	
	
	^ ((10 * ep) * self getNumberOfCells).! !
!Residential methodsFor: 'accessing' stamp: 'sm 9/23/2021 19:06:58' prior: 50865553!
getWaterConsumption
	
	
	^ ((9 * wp) * self getNumberOfCells).! !
!Commertial methodsFor: 'accessing' stamp: 'sm 9/23/2021 19:07:36' prior: 50865558!
getWaterConsumption
	
	
	^ ((2 * wp) * self getNumberOfCells).! !
!Industrial methodsFor: 'accessing' stamp: 'sm 9/23/2021 19:08:19' prior: 50865548!
getWaterConsumption
	
	
	^ ((10 * wp) * self getNumberOfCells).! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:08:24'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:08:25'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:08:25'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:09:48' prior: 50860156!
waterConsumption
	
	| index total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		total _ total + (zone getWaterConsumption ).
"		zone type = #Residential ifTrue: [ total _ total + ((9 * wp) * zone getNumberOfCells) ].	
		zone type = #Commertial ifTrue: [ total _ total + ((2 * wp) * zone getNumberOfCells) ].	
		zone type = #Industrial ifTrue: [ total _ total + ((10 * wp) * zone getNumberOfCells) ].	
	"	index := index + 1.
	].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:09:55'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:09:56'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:09:56'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:10:05' prior: 50865678!
waterConsumption
	
	| index total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		total _ total + (zone getWaterConsumption ).
	index := index + 1.
	].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:10:08'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:10:09'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:10:09'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:10:09'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:10:09'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:10:09'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:10:09'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:10:09'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:11:45' prior: 50865797!
waterConsumption
	
	| index total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	zones do: [:zone | total _ total + (zone getWaterConsumption )].
	[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		total _ total + (zone getWaterConsumption ).
		index := index + 1.
	].

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:11:56' prior: 50865908!
waterConsumption
	
	| index total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	zones do: [:zone | total _ total + (zone getWaterConsumption )].
	
	"[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		total _ total + (zone getWaterConsumption ).
		index := index + 1.
	]."

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:12:08' prior: 50865921!
waterConsumption
	
	|total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	total _ 0.
	zones do: [:zone | total _ total + (zone getWaterConsumption )].
	
	"[index <= zones size] whileTrue: [ | zone |
		zone _ zones at: index.
		total _ total + (zone getWaterConsumption ).
		index := index + 1.
	]."

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:12:17'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:12:24' prior: 50865935!
waterConsumption
	
	|total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	total _ 0.
	zones do: [:zone | total _ total + (zone getWaterConsumption )].

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:12:27'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:14:12' prior: 50860420!
energyProduced
	
	| index total serviceOfSolarPlant|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0 * ep.
	
	[index <= services size] whileTrue: [ | service |
		service _ services at: index.
		service type = #SolarPlant ifTrue: [ total _ total + (500 * ep)].	
		index := index + 1.
	].

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:15:31' prior: 50866155!
energyProduced
	
	| index total serviceOfSolarPlant|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0 * ep.
	serviceOfSolarPlant := services select: [:service | service type = #SolarPlant].
	
	[index <= services size] whileTrue: [ | service |
		service _ services at: index.
		service type = #SolarPlant ifTrue: [ total _ total + (500 * ep)].	
		index := index + 1.
	].

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:17:14' prior: 50866168!
energyProduced
	
	| index total serviceOfSolarPlant|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0 * ep.
	serviceOfSolarPlant := services select: [:service | service type = #SolarPlant].
	serviceOfSolarPlant do: [:service | total _ total + (500 * ep)].
	[index <= services size] whileTrue: [ | service |
		service _ services at: index.
		service type = #SolarPlant ifTrue: [ total _ total + (500 * ep)].	
		index := index + 1.
	].

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:17:30' prior: 50866184!
energyProduced
	
	| index total serviceOfSolarPlant|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0 * ep.
	serviceOfSolarPlant := services select: [:service | service type = #SolarPlant].
	serviceOfSolarPlant do: [:service | total _ total + (500 * ep)].
	"[index <= services size] whileTrue: [ | service |
		service _ services at: index.
		service type = #SolarPlant ifTrue: [ total _ total + (500 * ep)].	
		index := index + 1.
	]."

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:17:46' prior: 50866202!
energyProduced
	
	|  total serviceOfSolarPlant|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	 
	total _ 0 * ep.
	serviceOfSolarPlant := services select: [:service | service type = #SolarPlant].
	serviceOfSolarPlant do: [:service | total _ total + (500 * ep)].
	"[index <= services size] whileTrue: [ | service |
		service _ services at: index.
		service type = #SolarPlant ifTrue: [ total _ total + (500 * ep)].	
		index := index + 1.
	]."

	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:17:51'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:17:51'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:17:51'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:17:51'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:17:51'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:17:51'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:17:52'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:18:00' prior: 50866220!
energyProduced
	
	|  total serviceOfSolarPlant|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	 
	total _ 0 * ep.
	serviceOfSolarPlant := services select: [:service | service type = #SolarPlant].
	serviceOfSolarPlant do: [:service | total _ total + (500 * ep)].
	
	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:19:58' prior: 50860532!
waterProduced
	|  total serviceOfWaterTower|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	 
	total _ 0 * ep.
	serviceOfWaterTower := services select: [:service | service type = #WaterTower].
	serviceOfWaterTower do: [:service | total _ total + (200 * wp)].
	
	^ total.
	"| index total |
	
	self checkIfServicesIsNilToInitialiseIt.
	
	index _ 1.
	total _ 0.
	
	[index <= services size] whileTrue: [ | service |
		service _ services at: index.
		service type = #WaterTower ifTrue: [ total _ total + (200 * wp)].	
		index := index + 1.
	].

	^ total.
	
	
	
	"! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:20:14'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:20:15'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:21:03' prior: 50866349!
waterProduced
	|  total serviceOfWaterTower|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	 
	total _ 0 * ep.
	serviceOfWaterTower := services select: [:service | service type = #WaterTower].
	serviceOfWaterTower do: [:service | total _ total + (200 * wp)].
	
	^ total.
! !
!WaterTower methodsFor: 'initialization' stamp: 'sm 9/23/2021 19:22:03'!
wterProduced
	
	^type.! !
!WaterTower methodsFor: 'initialization' stamp: 'sm 9/23/2021 19:22:15' prior: 50866480!
wterProduced
	
	^(200 * wp).! !
!WaterTower methodsFor: 'initialization' stamp: 'sm 9/23/2021 19:22:21'!
waterProduced
	
	^(200 * wp).! !

!methodRemoval: WaterTower #wterProduced stamp: 'sm 9/23/2021 19:22:29'!
wterProduced
	
	^(200 * wp).!

----SNAPSHOT----(23 September 2021 19:22:37) CuisUniversity-4532.image priorSource: 17081188!
!SolarPlant methodsFor: 'initialization' stamp: 'sm 9/23/2021 19:23:19'!
waterProduced
	
	^(500 * ep).! !
!SolarPlant methodsFor: 'initialization' stamp: 'sm 9/23/2021 19:23:30'!
energyProduced
	
	^(500 * ep).! !

!methodRemoval: SolarPlant #waterProduced stamp: 'sm 9/23/2021 19:23:54'!
waterProduced
	
	^(500 * ep).!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:24:31' prior: 50866469!
waterProduced
	|  total serviceOfWaterTower|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	 
	total _ 0 * ep.
	serviceOfWaterTower := services select: [:service | service type = #WaterTower].
	serviceOfWaterTower do: [:service | total _ total + service waterProduced ].
	
	^ total.
! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:24:36'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:24:36'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:24:36'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:24:36'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:24:36'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:24:36'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:24:37'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:25:12' prior: 50866337!
energyProduced
	
	|  total serviceOfSolarPlant|
	
	self checkIfServicesIsNilToInitialiseIt.
	
	 
	total _ 0 * ep.
	serviceOfSolarPlant := services select: [:service | service type = #SolarPlant].
	serviceOfSolarPlant do: [:service | total _ total + service energyProduced ].
	
	^ total.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:25:15'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:25:16'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:25:16'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:25:16'!
PASSED!

----SNAPSHOT----(23 September 2021 19:25:46) CuisUniversity-4532.image priorSource: 17115016!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:26:55'!
calculateWaterProduced
	|  total serviceOfWaterTower|
	
	 
	total _ 0 * ep.
	serviceOfWaterTower := services select: [:service | service type = #WaterTower].
	serviceOfWaterTower do: [:service | total _ total + service waterProduced ].
	
	^ total.
! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:27:18' prior: 50866510!
waterProduced
	
	self checkIfServicesIsNilToInitialiseIt.
	
	 
	^ self calculateWaterProduced.
! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:27:22'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:27:23'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:27:30' prior: 50866747!
waterProduced
	
	self checkIfServicesIsNilToInitialiseIt.
	
	^ self calculateWaterProduced.
! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:27:55'!
calculateEnergyProduced
	
	|  total serviceOfSolarPlant|
	
	 
	total _ 0 * ep.
	serviceOfSolarPlant := services select: [:service | service type = #SolarPlant].
	serviceOfSolarPlant do: [:service | total _ total + service energyProduced ].
	
	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:28:25' prior: 50866622!
energyProduced
	self checkIfServicesIsNilToInitialiseIt.
	^ self calculateEnergyProduced.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:28:32'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:29:21'!
CalculateEnergyConsumption
	
	|  total |
	
	total _ 0.
	zones do: [:zone | total _ total + (zone getEnergyConsum )].

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:29:35' prior: 50865047!
energyConsumption
	
	|  total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	total _ 0.
	zones do: [:zone | total _ total + (zone getEnergyConsum )].

	^ self CalculateEnergyConsumption.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:29:42' prior: 50866982!
energyConsumption
	
	self checkIfZonesIsNilToInitialiseIt.

	^ self CalculateEnergyConsumption.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:29:45'!
PASSED!
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:30:35'!
CalculateWaterConsumption
	
	|total |
	
	self checkIfZonesIsNilToInitialiseIt.
	
	total _ 0.
	zones do: [:zone | total _ total + (zone getWaterConsumption )].

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:30:46' prior: 50867096!
CalculateWaterConsumption
	
	|total |
	
	total _ 0.
	zones do: [:zone | total _ total + (zone getWaterConsumption )].

	^ total.! !
!City methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:31:05' prior: 50866047!
waterConsumption

	self checkIfZonesIsNilToInitialiseIt.

	^ self CalculateWaterConsumption.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:31:13'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:31:14'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:31:14'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:31:14'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:31:14'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:31:14'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:31:14'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:36:39'!
yyy: aZone

	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self aZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:38:10' prior: 50867217!
yyy: aMesagge

	| city |

	city _ City new.
	
	self 
		should: [ city addZone: (aMesagge value) ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:39:29' prior: 50859552!
test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable
"
	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self industrialZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]"
	self yyy: [self industrialZone].! !

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:39:34'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:39:35'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:40:06' prior: 50859539!
test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

"	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self commertialZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]"
		self yyy: [self commertialZone].
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:40:56' prior: 50859526!
test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

"	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self residentialZone. ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size]"
				self yyy: [self residentialZone].
! !

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:40:58'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:40:59'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:43:59'!
createACityAndCheckIfItCantBeAdden: aMesagge

	| city |

	city _ City new.
	
	self 
		should: [ city addZone: (aMesagge value) ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:43:59' prior: 50867241!
test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable
"
	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self industrialZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]"
	self createACityAndCheckIfItCantBeAdden: [self industrialZone].! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:44:00' prior: 50867359!
test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

"	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self commertialZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]"
		self createACityAndCheckIfItCantBeAdden: [self commertialZone].
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:44:00' prior: 50867374!
test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

"	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self residentialZone. ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size]"
				self createACityAndCheckIfItCantBeAdden: [self residentialZone].
! !

!methodRemoval: CityTest #yyy: stamp: 'sm 9/23/2021 19:44:00'!
yyy: aMesagge

	| city |

	city _ City new.
	
	self 
		should: [ city addZone: (aMesagge value) ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]
		!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:45:54' prior: 50867505!
test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

	| creatigZoneMensagge |
"
	city _ City new.
	
	self 
		should: [ city addZone: self industrialZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]"
	creatigZoneMensagge:= [self industrialZone].
	self createACityAndCheckIfItCantBeAdden: creatigZoneMensagge.! !

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:45:56'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:45:57'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:46:33' prior: 50867563!
test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

	| creatigZoneMensagge |
	
	creatigZoneMensagge:= [self industrialZone].
	
	self createACityAndCheckIfItCantBeAdden: creatigZoneMensagge.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:47:16'!
createACityAndCheckIfItCantBeAddenTheZone: aMesagge

	| city |

	city _ City new.
	
	self 
		should: [ city addZone: (aMesagge value) ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:47:16' prior: 50867537!
test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

"	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self residentialZone. ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size]"
				self createACityAndCheckIfItCantBeAddenTheZone: [self residentialZone].
! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:47:16' prior: 50867521!
test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

"	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self commertialZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]"
		self createACityAndCheckIfItCantBeAddenTheZone: [self commertialZone].
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:47:16' prior: 50867684!
test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

	| creatigZoneMensagge |
	
	creatigZoneMensagge:= [self industrialZone].
	
	self createACityAndCheckIfItCantBeAddenTheZone: creatigZoneMensagge.! !

!methodRemoval: CityTest #createACityAndCheckIfItCantBeAdden: stamp: 'sm 9/23/2021 19:47:16'!
createACityAndCheckIfItCantBeAdden: aMesagge

	| city |

	city _ City new.
	
	self 
		should: [ city addZone: (aMesagge value) ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]
		!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:47:50' prior: 50867693!
createACityAndCheckIfItCantBeAddenTheZone: aCreationZoneMesagge

	| city |

	city _ City new.
	
	self 
		should: [ city addZone: (aCreationZoneMesagge value) ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:48:25' prior: 50867722!
test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

| creatigZoneMensagge |
	
	creatigZoneMensagge:= [self commertialZone].
	
	self createACityAndCheckIfItCantBeAddenTheZone: creatigZoneMensagge.

"	| city |

	city _ City new.
	
	self 
		should: [ city addZone: self commertialZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddZoneErrorDescription.
			self assert: 0 equals: city zones size ]"
		self createACityAndCheckIfItCantBeAddenTheZone: [self commertialZone].
		! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:48:36' prior: 50867774!
test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

	| creatigZoneMensagge |
	
	creatigZoneMensagge:= [self commertialZone].
	
	self createACityAndCheckIfItCantBeAddenTheZone: creatigZoneMensagge.
! !

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:48:38'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:48:39'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:49:28' prior: 50867706!
test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable

	| creatigZoneMensagge |
	
	creatigZoneMensagge:= [self residentialZone].
	
	self createACityAndCheckIfItCantBeAddenTheZone: creatigZoneMensagge.
! !

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:49:42'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:49:49'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:49:50'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:51:59'!
getCityWhitSolarPlantAndWaterTower

	| city|

	city _ City new.
	city addService: self solarPlant.
	city addService: self waterTower.
	
	^city.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:52:47' prior: 50859656!
test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable

	| city zone |

	city := self getCityWhitSolarPlantAndWaterTower.
	"City new.
	city addService: self solarPlant.
	city addService: self waterTower.
	"
	zone _ self industrialZone.
	zone setNumberOfCells: 2.
	city addZone: zone.
	
	self assert: 200 - (10 * 2) * wp equals: city waterAvailable.! !

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:52:51'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:53:02' prior: 50868028!
test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable

	| city zone |

	city := self getCityWhitSolarPlantAndWaterTower.
	zone _ self industrialZone.
	zone setNumberOfCells: 2.
	city addZone: zone.
	
	self assert: 200 - (10 * 2) * wp equals: city waterAvailable.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:53:24' prior: 50859641!
test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable

	| city zone |
	
	city := self getCityWhitSolarPlantAndWaterTower.

	city addZone: self residentialZone.
	
	zone _ self commertialZone.
	zone setNumberOfCells: 2.
	city addZone: zone.
	
	self assert: 200 - 9 - (2 * 2) * wp equals: city waterAvailable.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:53:31' prior: 50859628!
test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable

	| city zone |

	city := self getCityWhitSolarPlantAndWaterTower.
	zone _ self residentialZone.
	zone setNumberOfCells: 2.
	city addZone: zone.
	
	self assert: 200 - (9 * 2) * wp equals: city waterAvailable.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:53:39' prior: 50859615!
test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable

	| city zone |

	city := self getCityWhitSolarPlantAndWaterTower.

	zone _ self industrialZone.
	zone setNumberOfCells: 2.
	city addZone: zone.
	
	self assert: 500 - (10 * 2) * ep equals: city energyAvailable.! !

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:53:41'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:53:41'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:53:41'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:53:42'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:53:52' prior: 50859600!
test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable

	| city zone |

	city := self getCityWhitSolarPlantAndWaterTower.
	
	city addZone: self residentialZone.
	
	zone _ self commertialZone.
	zone setNumberOfCells: 2.
	city addZone: zone.
	
	self assert: 500 - 5 - (8 * 2) * ep equals: city energyAvailable.! !

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:53:56'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:53:57'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:53:57'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:53:57'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:53:57'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:53:57'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:54:10' prior: 50859587!
test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable

	| city zone |
	city := self getCityWhitSolarPlantAndWaterTower.
	zone _ self residentialZone.
	zone setNumberOfCells: 2.
	city addZone: zone.
	
	self assert: 500 - (5 * 2) * ep equals: city energyAvailable.! !

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:54:12'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:54:27' prior: 50859572!
test19CityWithoutResidentialZonesCannotAddCommertialZone

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.
	self 
		should: [ city addZone: self commertialZone ] 
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText equals: City cannotAddCommertialZoneErrorDescription.
			self assert: 0 equals: city zones size ]! !

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:54:28'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:54:29'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:54:29'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:55:00' prior: 50859492!
test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.

	city addZone: self residentialZone.
	city addZone: self commertialZone.
	city addZone: self industrialZone.
	city addZone: self industrialZone.
	
	self assert: 200 - 31 * wp equals: city waterAvailable.! !

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:55:02'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:55:03'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:03'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:03'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:03'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:55:03'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:55:03'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:55:03'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:55:16' prior: 50859481!
test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.
	
	city addZone: self industrialZone.
	
	self assert: 200 - 10 * wp equals: city waterAvailable.! !

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:55:18'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:55:29' prior: 50859469!
test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.

	city addZone: self residentialZone.
	city addZone: self commertialZone.
	
	self assert: 200 - 9 - 2 * wp equals: city waterAvailable.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:55:39' prior: 50859458!
test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.
	city addZone: self residentialZone.
	
	self assert: 200 - 9 * wp equals: city waterAvailable.! !

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:55:40'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:55:41'!
PASSED!

----SNAPSHOT----(23 September 2021 19:55:45) CuisUniversity-4532.image priorSource: 17122635!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:56:09' prior: 50859427!
test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.

	city addZone: self residentialZone.
	city addZone: self commertialZone.
	city addZone: self industrialZone.	
	city addZone: self industrialZone.
	
	self assert: 500 - 5 - 8 - (10 * 2) * ep equals: city energyAvailable.! !

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:56:14'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:56:18'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:56:19'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:56:29' prior: 50859416!
test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.

	city addZone: self industrialZone.
	
	self assert: 500 - 10 * ep equals: city energyAvailable.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:56:38' prior: 50859404!
test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.
	
	city addZone: self residentialZone.
	city addZone: self commertialZone.
	
	self assert: 500 - 5 - 8 * ep equals: city energyAvailable.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 19:56:45' prior: 50859393!
test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.

	city addZone: self residentialZone.
	
	self assert: 500 - 5 * ep equals: city energyAvailable.! !

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 19:56:52'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 19:56:53'!
PASSED!

----SNAPSHOT----(23 September 2021 20:00:33) CuisUniversity-4532.image priorSource: 17195499!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 20:03:06'!
addToThisCityAResidentialZoneAndACommertialZone: aCity 


	aCity addZone: self residentialZone.
	aCity addZone: self commertialZone.
	
	^aCity.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 20:04:06' prior: 50869145!
test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.
	city:=self addToThisCityAResidentialZoneAndACommertialZone: city.
	
	self assert: 500 - 5 - 8 * ep equals: city energyAvailable.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 20:04:44'!
addAndReturnToThisCityAResidentialZoneAndACommertialZone: aCity 


	aCity addZone: self residentialZone.
	aCity addZone: self commertialZone.
	
	^aCity.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 20:04:44' prior: 50869281!
test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.
	city:=self addAndReturnToThisCityAResidentialZoneAndACommertialZone: city.
	
	self assert: 500 - 5 - 8 * ep equals: city energyAvailable.! !

!methodRemoval: CityTest #addToThisCityAResidentialZoneAndACommertialZone: stamp: 'sm 9/23/2021 20:04:44'!
addToThisCityAResidentialZoneAndACommertialZone: aCity 


	aCity addZone: self residentialZone.
	aCity addZone: self commertialZone.
	
	^aCity.!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 20:05:22' prior: 50869014!
test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.

	city:=self addAndReturnToThisCityAResidentialZoneAndACommertialZone: city.
	city addZone: self industrialZone.	
	city addZone: self industrialZone.
	
	self assert: 500 - 5 - 8 - (10 * 2) * ep equals: city energyAvailable.! !

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 20:05:25'!
PASSED!
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 20:05:45' prior: 50868885!
test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.

	city:=self addAndReturnToThisCityAResidentialZoneAndACommertialZone: city.
	
	self assert: 200 - 9 - 2 * wp equals: city waterAvailable.! !
!CityTest methodsFor: 'as yet unclassified' stamp: 'sm 9/23/2021 20:05:57' prior: 50868654!
test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable

	| city |

	city := self getCityWhitSolarPlantAndWaterTower.

	city:=self addAndReturnToThisCityAResidentialZoneAndACommertialZone: city.
	city addZone: self industrialZone.
	city addZone: self industrialZone.
	
	self assert: 200 - 31 * wp equals: city waterAvailable.! !

----SNAPSHOT----(23 September 2021 20:07:35) CuisUniversity-4532.image priorSource: 17203809!

----SNAPSHOT----(23 September 2021 20:14:52) CuisUniversity-4532.image priorSource: 17209998!

!testRun: #CityTest #test01CityWithoutPowerServicesHaveZeroEnergyProduced stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test02CityWithSolarPlantWithoutZonesHave500EnergyAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test03CityWithSolarPlantWithResidentialZonesHave495EnergyAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test04CityWithSolarPlantWithCommertialZonesHave492EnergyAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test05CityWithSolarPlantWithIndustrialZonesHave490EnergyAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test06CityWithSolarPlantWithServeralZonesImpactEnergyAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test07CityWithoutWaterServicesHaveZeroWaterProduced stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test08CityWithWaterTowerWithoutZonesHave200WaterAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test09CityWithWaterTowerWithResidentialZonesHave191WaterAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test10CityWithWaterTowerWithCommertialZonesHave198WaterAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test11CityWithWaterTowerWithIndustrialZonesHave190WaterAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test12CityWithWaterTowerWithServeralZonesImpactWaterAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test13CityWith2SolarPlantsHaveTwiceEnergyAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test14CityWith2WaterTowerHaveTwiceWaterAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test15AResidentialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 20:25:44'!
PASSED!

!testRun: #CityTest #test16ACommertialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test17AnIndustrialZoneCannotBeAddedWithoutEnergyAndWaterAvailable stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test18CityWithoutZonesHaveZeroEnergyConsumption stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test19CityWithoutResidentialZonesCannotAddCommertialZone stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test20CityWithSolarPlantWithResidentialZoneWithManyCellsHave10LessEnergyAvailable stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test21CityWithSolarPlantWithCommertialZoneWithManyCellsHave16LessEnergyAvailable stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test22CityWithSolarPlantWithIndustrialZoneWithManyCellsHave20LessEnergyAvailable stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test23CityWithWaterTowerWithResidentialZoneWithManyCellsHave18LessWaterAvailable stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test24CityWithWaterTowerWithCommertialZoneWithManyCellsHave4LessWaterAvailable stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

!testRun: #CityTest #test25CityWithWaterTowerWithIndustrialZoneWithManyCellsHave20LessWaterAvailable stamp: 'sm 9/23/2021 20:25:45'!
PASSED!

----SNAPSHOT----(23 September 2021 20:25:55) CuisUniversity-4532.image priorSource: 17210093!

----QUIT----(23 September 2021 20:26:21) CuisUniversity-4532.image priorSource: 17213366!

----STARTUP---- (5 October 2021 12:17:05) as D:\documentos\inge1\1erParcial\windows64\windows64\CuisUniversity-4532.image!


----End fileIn of D:\Descargas\MarsRover.st----!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 12:26:48'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:26:48'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 12:26:54'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:26:54'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:27:16'!
test03
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #North.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@3 heading: #North).! !

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:27:18'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 12:27:18'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:27:18'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:27:18'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:27:35' prior: 50869676!
test03
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #North.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@1 heading: #North).! !

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:27:38'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:31:31' prior: 50869645!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		aCommand = 'f' isTrue: [position := position + (0@1)]. 
		aCommand = 'b' isTrue: [position := position - (0@1)]]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:31:37' prior: 50869705!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		aCommand = 'f' isTrue: [position := position + (0@1)]. 
		aCommand = 'b' isTrue: [position := position - (0@1)]].! !

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:31:43'!
ERROR!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:32:38'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:33:16' prior: 50869714!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = 'f') isTrue: [position := position + (0@1)]. 
		(aCommand = 'b') isTrue: [position := position - (0@1)]].! !

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:33:19'!
ERROR!

(aCommand = 'f')!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:34:49' prior: 50869728!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = 'f') ifTrue: [position := position + (0@1)]. 
		(aCommand = 'b') ifTrue: [position := position - (0@1)]].! !

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:34:54'!
FAILURE!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:35:07'!
FAILURE!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:35:44'!
FAILURE!

(marsRover isAt: 1@1 heading: #North)!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:42:42' prior: 50869740!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = 'f') ifTrue: [position := position + (0@1)]. 
		(aCommand = 'b') ifTrue: [position := position + (0@-1)]].! !

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:42:52'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:43:51' prior: 50869758!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = 'f') ifTrue: [position := position + (0@1)]. 
		 position := position - (0@1).
		].! !

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:43:56'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 12:43:56'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:43:56'!
FAILURE!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:43:56'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:43:56'!
FAILURE!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:44:19'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:45:04' prior: 50869770!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = 'f') ifTrue: [position := position + (0@1)].
		(aCommand = 'b') ifTrue: [position := position - (0@1)]. 
		].! !

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:45:08'!
FAILURE!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:45:28'!
FAILURE!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:45:28'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:46:17' prior: 50869793!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = 'f') ifTrue: [position := position + (0@1).].
		(aCommand = 'b') ifTrue: [position := position - (0@1).]. 
		].! !

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:46:20'!
FAILURE!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:46:51'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:47:53' prior: 50869810!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [position := position + (0@1).].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		].! !

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:47:58'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 12:47:58'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:47:58'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:47:58'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:50:59'!
test04
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #North.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 1@2 heading: #West).! !

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 12:51:03'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:54:54' prior: 50869824!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [position := position + (0@1).].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [direction := #West].
		].! !

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 12:54:57'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 12:54:57'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:54:57'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:54:57'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 12:54:57'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:55:37'!
test05
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #North.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 1@2 heading: #East).! !

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 12:55:44'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:56:14' prior: 50869854!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [position := position + (0@1).].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [direction := #West].
		(aCommand = $r) ifTrue: [direction := #East].
		].! !

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 12:56:16'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 12:56:16'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:56:16'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:56:17'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 12:56:17'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 12:56:17'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:57:01'!
test06
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #North.
	
	marsRover process: 'w'.
	
	self assert: (marsRover isAt: 1@2 heading: #East).! !

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 12:57:12'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 12:59:31' prior: 50869913!
test06
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #North.
	
	marsRover process: 'w'.
	
	self assert: (marsRover isAt: 1@2 heading: #North).! !

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 12:59:31'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 12:59:31'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 12:59:31'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 12:59:31'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 12:59:31'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 12:59:31'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 12:59:31'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:01:53' prior: 50869924!
test06
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #North.
	
	marsRover process: 'ff'.
	
	self assert: (marsRover isAt: 1@4 heading: #North).! !

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 13:01:55'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 13:01:55'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 13:01:55'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 13:01:55'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 13:01:55'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 13:01:55'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 13:01:55'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:03:45' prior: 50869949!
test06
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #North.
	
	marsRover process: 'fb'.
	
	self assert: (marsRover isAt: 1@2 heading: #North).! !

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 13:03:47'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 13:03:47'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 13:03:47'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 13:03:47'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 13:03:47'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 13:03:47'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 13:03:47'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:05:38' prior: 50869974!
test06
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #South.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 1@2 heading: #East).! !

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 13:05:40'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:09:58' prior: 50869887!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [position := position + (0@1).].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [
			(direction = #North) ifTrue: [direction := #West].
			(direction = #South) ifTrue: [direction := #East]].
		(aCommand = $r) ifTrue: [direction := #East].
		].! !

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 13:10:08'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 13:10:08'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 13:10:08'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 13:10:08'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 13:10:08'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 13:10:08'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 13:10:08'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:11:00'!
test07
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: #South.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 1@2 heading: #West).! !

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 13:11:02'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:11:49' prior: 50870010!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [position := position + (0@1).].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [
			(direction = #North) ifTrue: [direction := #West].
			(direction = #South) ifTrue: [direction := #East]].
		(aCommand = $r) ifTrue: [
			(direction = #North) ifTrue: [direction := #East].
			(direction = #South) ifTrue: [direction := #West]].
		].! !

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 13:11:52'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 13:11:52'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 13:11:52'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 13:11:52'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 13:11:52'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 13:11:52'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 13:11:53'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 13:11:53'!
PASSED!

Object subclass: #Direction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #Direction category: 'MarsRover' stamp: 'sm 10/5/2021 13:13:01'!
Object subclass: #Direction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Direction subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #North category: 'MarsRover' stamp: 'sm 10/5/2021 13:13:23'!
Direction subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Direction subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #South category: 'MarsRover' stamp: 'sm 10/5/2021 13:13:32'!
Direction subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Direction subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #East category: 'MarsRover' stamp: 'sm 10/5/2021 13:13:37'!
Direction subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Direction subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #West category: 'MarsRover' stamp: 'sm 10/5/2021 13:13:44'!
Direction subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:25:40'!
turnLeft! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:26:15'!
turnRight! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:41:23' prior: 50870143!
turnRight

	direction:= East rotateLeft. ! !
!East methodsFor: 'no messages' stamp: 'sm 10/5/2021 13:42:06'!
rotateLeft

	^North.! !
!East class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:43:31'!
rotateLeft

	^North.! !

!methodRemoval: East #rotateLeft stamp: 'sm 10/5/2021 13:43:31'!
rotateLeft

	^North.!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:47:10' prior: 50870147!
turnRight

	direction:= direction rotateLeft. ! !
!Direction methodsFor: 'no messages' stamp: 'sm 10/5/2021 13:48:12'!
rotateLeft
	^self subclassResponsibility.! !
!North methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:48:23' overrides: 50870166!
rotateLeft
	^self subclassResponsibility.! !
!South methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:48:23' overrides: 50870166!
rotateLeft
	^self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:48:23' overrides: 50870166!
rotateLeft
	^self subclassResponsibility.! !
!West methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:48:23' overrides: 50870166!
rotateLeft
	^self subclassResponsibility.! !

!methodRemoval: Direction #rotateLeft stamp: 'sm 10/5/2021 13:48:23'!
rotateLeft
	^self subclassResponsibility.!
!Direction methodsFor: 'no messages' stamp: 'sm 10/5/2021 13:48:48'!
rotateLeft

	^self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:49:16' prior: 50870181 overrides: 50870194!
rotateLeft
	^North.! !
!North methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:49:39' prior: 50870171 overrides: 50870194!
rotateLeft
	^West.! !
!South methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:49:51' prior: 50870176 overrides: 50870194!
rotateLeft
	^East.! !
!West methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:50:03' prior: 50870186 overrides: 50870194!
rotateLeft
	^South.! !
!Direction methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:50:22'!
rotateRight

	^self subclassResponsibility.! !
!North methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:50:27' overrides: 50870218!
rotateRight

	^self subclassResponsibility.! !
!South methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:50:27' overrides: 50870218!
rotateRight

	^self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:50:27' overrides: 50870218!
rotateRight

	^self subclassResponsibility.! !
!West methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:50:27' overrides: 50870218!
rotateRight

	^self subclassResponsibility.! !

!methodRemoval: Direction #rotateRight stamp: 'sm 10/5/2021 13:50:27'!
rotateRight

	^self subclassResponsibility.!
!East methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:50:40' prior: 50870233!
rotateRight

	^South.! !
!North methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:50:48' prior: 50870223!
rotateRight

	^East.! !
!South methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:51:02' prior: 50870228!
rotateRight

	^West.! !
!West methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:51:12' prior: 50870238!
rotateRight

	^North.! !

	^North.!
!Direction methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:51:45'!
rotateRight

	^self subclassResponsibility.! !

!classRenamed: #Direction as: #CardinalDirection stamp: 'sm 10/5/2021 13:52:21'!
Smalltalk renameClassNamed: #Direction as: #CardinalDirection!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:53:15' prior: 50870140!
turnLeft

	direction:=direction rotateLeft.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:53:30' prior: 50870162!
turnRight

	direction:=direction rotateRight.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:55:31' prior: 50870052!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [position := position + (0@1).].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.].
		].! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:55:59' prior: 50870041!
test07
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: South.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 1@2 heading: West)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:56:08' prior: 50869999!
test06
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: South.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 1@2 heading: East).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:56:16' prior: 50869876!
test05
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 1@2 heading: East).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:56:26' prior: 50869843!
test04
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 1@2 heading: West).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:56:30' prior: 50869694!
test03
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@1 heading: #North).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:56:35' prior: 50870325!
test03
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@1 heading: North).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:56:49' prior: 50869598!
test02
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@3 heading: North).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 13:56:59' prior: 50869590!
test01
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 1@2 heading: North).! !

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 13:57:14'!
ERROR!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 13:57:52'!
ERROR!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 13:58:04'!
ERROR!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 13:58:23'!
ERROR!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:00:36'!
ERROR!
!South class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:01:17'!
rotateRight

	^West.! !

!methodRemoval: South #rotateRight stamp: 'sm 10/5/2021 14:01:17'!
rotateRight

	^West.!
!West class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:01:29'!
rotateRight

	^North.! !

!methodRemoval: West #rotateRight stamp: 'sm 10/5/2021 14:01:29'!
rotateRight

	^North.!
!West class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:01:34'!
rotateLeft
	^South.! !

!methodRemoval: West #rotateLeft stamp: 'sm 10/5/2021 14:01:34'!
rotateLeft
	^South.!
!South class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:01:42'!
rotateLeft
	^East.! !

!methodRemoval: South #rotateLeft stamp: 'sm 10/5/2021 14:01:42'!
rotateLeft
	^East.!
!North class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:01:49'!
rotateRight

	^East.! !

!methodRemoval: North #rotateRight stamp: 'sm 10/5/2021 14:01:49'!
rotateRight

	^East.!
!North class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:01:55'!
rotateLeft
	^West.! !

!methodRemoval: North #rotateLeft stamp: 'sm 10/5/2021 14:01:55'!
rotateLeft
	^West.!
!East class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:02:00'!
rotateRight

	^South.! !

!methodRemoval: East #rotateRight stamp: 'sm 10/5/2021 14:02:01'!
rotateRight

	^South.!
!East class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:02:05' prior: 50870155!
rotateLeft
	^North.! !

!methodRemoval: East #rotateLeft stamp: 'sm 10/5/2021 14:02:05'!
rotateLeft
	^North.!
!CardinalDirection class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:02:15'!
rotateRight

	^self subclassResponsibility.! !

!methodRemoval: CardinalDirection #rotateRight stamp: 'sm 10/5/2021 14:02:16'!
rotateRight

	^self subclassResponsibility.!
!CardinalDirection class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:02:22'!
rotateLeft

	^self subclassResponsibility.! !

!methodRemoval: CardinalDirection #rotateLeft stamp: 'sm 10/5/2021 14:02:22'!
rotateLeft

	^self subclassResponsibility.!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:02:29'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:02:29'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:02:29'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:02:29'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:02:29'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:02:29'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:02:29'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:02:29'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:08:02'!
test08
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'ffbff'.
	
	self assert: (marsRover isAt: 1@5 heading: North)! !

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:08:05'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:10:04' prior: 50870456!
test08
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: East.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 2@2 heading: East)! !

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:10:06'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:12:29' prior: 50870281!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [
			(direction=North) ifTrue:[position := position + (0@1).].
			(direction=East) ifTrue:[position := position + (1@0).].
			].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.].
		].! !

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:12:34'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:14:58'!
test09
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: West.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@2 heading: West)! !

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:15:00'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:15:33' prior: 50870497!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [
			(direction=North) ifTrue:[position := position + (0@1).].
			(direction=East) ifTrue:[position := position + (1@0).].
			(direction=West) ifTrue:[position := position - (1@0).].
			].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.].
		].! !

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:15:37'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:16:09'!
test10
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: South.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@1 heading: South)! !

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:16:24'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:16:55' prior: 50870544!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [
			(direction=North) ifTrue:[position := position + (0@1).].
			(direction=East) ifTrue:[position := position + (1@0).].
			(direction=West) ifTrue:[position := position - (1@0).].
			(direction=South) ifTrue:[position := position + (0@1).].
			].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.].
		].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:17:01' prior: 50870595!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [
			(direction=North) ifTrue:[position := position + (0@1).].
			(direction=East) ifTrue:[position := position + (1@0).].
			(direction=West) ifTrue:[position := position - (1@0).].
			(direction=South) ifTrue:[position := position - (0@1).].
			].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.].
		].! !

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:17:06'!
PASSED!
!CardinalDirection class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:25:55'!
stepCoordinate

	^self subclassResponsibility.! !
!North class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:26:00' overrides: 50870659!
stepCoordinate

	^self subclassResponsibility.! !
!South class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:26:00' overrides: 50870659!
stepCoordinate

	^self subclassResponsibility.! !
!East class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:26:00' overrides: 50870659!
stepCoordinate

	^self subclassResponsibility.! !
!West class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:26:00' overrides: 50870659!
stepCoordinate

	^self subclassResponsibility.! !

!methodRemoval: CardinalDirection class #stepCoordinate stamp: 'sm 10/5/2021 14:26:00'!
stepCoordinate

	^self subclassResponsibility.!
!CardinalDirection class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:26:17'!
stepCoordinate

	^self subclassResponsibility.! !
!East class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:27:01' prior: 50870674 overrides: 50870688!
stepCoordinate

	^(1@0).! !
!North class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:27:12' prior: 50870664 overrides: 50870688!
stepCoordinate

	^(0@1).! !
!South class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:27:32' prior: 50870669 overrides: 50870688!
stepCoordinate

	^(0@-1).! !
!West class methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:27:54' prior: 50870679 overrides: 50870688!
stepCoordinate

	^(-1@0).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:30:55'!
moveForward
		position := position + (direction stepCoordinate).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:31:31' prior: 50870614!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [self moveForward.].
		(aCommand = $b) ifTrue: [position := position - (0@1).]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.].
		].! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:31:34' prior: 50870584!
test10
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: South.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@1 heading: South)! !

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:31:34'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:31:34'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:31:34'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:31:34'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:31:34'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:31:34'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:31:34'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:31:34'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:31:35'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:31:35'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:31:35'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:31:53'!
test11
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: South.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@1 heading: South)! !

!testRun: #MarsRoverTests #test11 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:31:56'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:31:57'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:31:57'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'sm 10/5/2021 14:31:57'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:32:46' prior: 50870765!
test11
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: South.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@3 heading: South)! !

!testRun: #MarsRoverTests #test11 stamp: 'sm 10/5/2021 14:32:48'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:34:17' prior: 50870802!
test11
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@1 heading: North)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:35:29' prior: 50870813!
test11
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: South.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@3 heading: South)! !

!testRun: #MarsRoverTests #test11 stamp: 'sm 10/5/2021 14:35:31'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:36:14'!
test12
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: East.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 0@2 heading: East)! !

!testRun: #MarsRoverTests #test12 stamp: 'sm 10/5/2021 14:36:15'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:36:42' prior: 50870831!
test12
	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: West.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 2@2 heading: West)! !

!testRun: #MarsRoverTests #test12 stamp: 'sm 10/5/2021 14:36:46'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:37:16' prior: 50870719!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [self moveForward.].
		(aCommand = $b) ifTrue: [self moveBackward.]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.].
		].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:38:00'!
moveBackward
		position := position - (direction stepCoordinate).! !

!testRun: #MarsRoverTests #test12 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'sm 10/5/2021 14:38:03'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:41:57'!
test13

	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'lbb'.
	
	self assert: (marsRover isAt: 2@2 heading: West)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:42:13' prior: 50870900!
test13

	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'lbb'.
	
	self assert: (marsRover isAt: 3@2 heading: West)! !

!testRun: #MarsRoverTests #test13 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'sm 10/5/2021 14:42:15'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:49:04' prior: 50870908!
test13

	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'fwf'.
	
	self assert: (marsRover isAt: 1@3 heading: North)! !

!testRun: #MarsRoverTests #test13 stamp: 'sm 10/5/2021 14:49:07'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:50:47' prior: 50870853!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [self moveForward.].
		(aCommand = $b) ifTrue: [self moveBackward.]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.].
		[^self]
		].! !

!testRun: #MarsRoverTests #test13 stamp: 'sm 10/5/2021 14:50:53'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:51:47' prior: 50870960!
process: aSequenceOfCommands 
	aSequenceOfCommands do: [:aCommand | 
		(aCommand = $f) ifTrue: [self moveForward.].
		(aCommand = $b) ifTrue: [self moveBackward.]. 
		(aCommand = $l) ifTrue: [self turnLeft.].
		(aCommand = $r) ifTrue: [self turnRight.] ifFalse: [^self].
		].! !

!testRun: #MarsRoverTests #test13 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'sm 10/5/2021 14:51:51'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'sm 10/5/2021 14:53:44'!
test14

	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: North.
	
	marsRover process: 'ff'.
	
	self assert: (marsRover isAt: 1@4 heading: North)! !

!testRun: #MarsRoverTests #test14 stamp: 'sm 10/5/2021 14:53:47'!
FAILURE!

----SNAPSHOT----(5 October 2021 15:00:23) CuisUniversity-4532.image priorSource: 17213461!

----QUIT----(5 October 2021 15:01:45) CuisUniversity-4532.image priorSource: 17260104!